name: Continuous Integration
on:
  push:
  pull_request:
jobs:
  package-name:
    name: Package Name
    runs-on: ubuntu-latest
    outputs:
      package-name: ${{ steps.package-name.outputs.package-name }}
    steps:
      - uses: actions/checkout@v1
      - id: package-name
        run: |
          printf "::set-output name=package-name::[\"%s\"]" $(docker run --rm -v "`pwd`:`pwd`" jess/jq jq -r -c '.name' "${GITHUB_WORKSPACE}/composer.json")
  supported-versions-matrix:
    name: Supported Versions Matrix
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.supported-versions-matrix.outputs.version }}
      upcoming: ${{ steps.supported-versions-matrix.outputs.upcoming }}
    steps:
      - uses: actions/checkout@v1
      - id: supported-versions-matrix
        uses: WyriHaximus/github-action-composer-php-versions-in-range@v1
        with:
          upcomingReleases: true
  generate-checks-strategy:
    name: Generate Checks
    runs-on: ubuntu-latest
    outputs:
      check: ${{ steps.generate-checks-strategy.outputs.check }}
    steps:
      - uses: actions/checkout@v1
      - id: generate-checks-strategy
        name: Generate check
        run: |
          printf "Checks found: %s\r\n" $(make task-list-ci)
          printf "::set-output name=check::%s" $(make task-list-ci)
  composer-install:
    strategy:
      fail-fast: false
      matrix:
        php: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}
        composer: [current, highest]
    needs:
      - supported-versions-matrix
    runs-on: ubuntu-latest
    container:
      image: wyrihaximusnet/php:${{ matrix.php }}-nts-alpine-slim-dev-root
    steps:
      - uses: actions/checkout@v1
      - name: Cache composer packages
        uses: actions/cache@v1
        with:
          path: ./vendor/
          key: ${{ matrix.composer }}-${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
      - name: Install Dependencies
        run: composer update --prefer-lowest --no-progress --ansi --no-interaction --prefer-dist -o
        if: matrix.composer == 'lowest'
      - name: Install Dependencies
        run: composer install --ansi --no-progress --no-interaction --prefer-dist -o
        if: matrix.composer == 'current'
      - name: Install Dependencies
        run: composer update --ansi --no-progress --no-interaction --prefer-dist -o
        if: matrix.composer == 'highest'
  can-require:
    name: Test we can require "${{ matrix.package-name }}" on PHP ${{ matrix.php }}
    strategy:
      fail-fast: false
      matrix:
        php: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}
        package-name: ${{ fromJson(needs.package-name.outputs.package-name) }}
    needs:
      - package-name
      - supported-versions-matrix
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/wyrihaximusnet/php:${{ matrix.php }}-nts-buster-dev-root
    steps:
      - uses: actions/checkout@v2
        with:
          path: checked_out_package
      - name: Set Up composer.json
        run: |
          echo "{\"repositories\": [{\"name\": \"${{ matrix.package-name }}\",\"type\": \"path\",\"url\": \"./checked_out_package\"}]}" > composer.json
      - name: Require package
        if: needs.supported-versions-matrix.outputs.upcoming != matrix.php
        run: |
          composer require "${{ matrix.package-name }}:dev-${GITHUB_SHA}" --no-progress --ansi --no-interaction --prefer-dist -o -vvv || composer require "${{ matrix.package-name }}:dev-${GITHUB_REF_NAME}" --no-progress --ansi --no-interaction --prefer-dist -o -vvv
  qa:
    strategy:
      fail-fast: false
      matrix:
        php: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}
        composer: [current, highest]
        check: ${{ fromJson(needs.generate-checks-strategy.outputs.check) }}
    needs:
      - supported-versions-matrix
      - composer-install
      - generate-checks-strategy
    runs-on: ubuntu-latest
    container:
      image: wyrihaximusnet/php:${{ matrix.php }}-nts-alpine-slim-dev-root
    steps:
      - uses: actions/checkout@v1
      - name: Cache composer packages
        uses: actions/cache@v1
        with:
          path: ./vendor/
          key: ${{ matrix.composer }}-${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
      - name: Install Dependencies
        run: composer update --prefer-lowest --no-progress --ansi --no-interaction --prefer-dist -o
        if: matrix.composer == 'lowest'
      - name: Install Dependencies
        run: composer install --ansi --no-progress --no-interaction --prefer-dist -o
        if: matrix.composer == 'current'
      - name: Install Dependencies
        run: composer update --ansi --no-progress --no-interaction --prefer-dist -o
        if: matrix.composer == 'highest'
      - name: Fetch Tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/* || true
        if: matrix.check == 'backward-compatibility-check'
      - run: make ${{ matrix.check }}
